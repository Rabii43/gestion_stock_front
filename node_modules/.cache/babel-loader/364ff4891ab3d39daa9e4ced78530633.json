{"remainingRequest":"/home/terres-rabii/Documents/travail/OacaFront/node_modules/babel-loader/lib/index.js!/home/terres-rabii/Documents/travail/OacaFront/src/router/index.js","dependencies":[{"path":"/home/terres-rabii/Documents/travail/OacaFront/src/router/index.js","mtime":1652206760773},{"path":"/home/terres-rabii/Documents/travail/OacaFront/node_modules/cache-loader/dist/cjs.js","mtime":1647982849025},{"path":"/home/terres-rabii/Documents/travail/OacaFront/node_modules/babel-loader/lib/index.js","mtime":1648047804470}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuaW5jbHVkZXMiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5vYmplY3QudG8tc3RyaW5nIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLml0ZXJhdG9yIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvd2ViLmRvbS1jb2xsZWN0aW9ucy5pdGVyYXRvciI7CmltcG9ydCBfY3JlYXRlRm9yT2ZJdGVyYXRvckhlbHBlciBmcm9tICIvaG9tZS90ZXJyZXMtcmFiaWkvRG9jdW1lbnRzL3RyYXZhaWwvT2FjYUZyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVGb3JPZkl0ZXJhdG9ySGVscGVyIjsKaW1wb3J0ICJyZWdlbmVyYXRvci1ydW50aW1lL3J1bnRpbWUiOwppbXBvcnQgX2FzeW5jVG9HZW5lcmF0b3IgZnJvbSAiL2hvbWUvdGVycmVzLXJhYmlpL0RvY3VtZW50cy90cmF2YWlsL09hY2FGcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vYXN5bmNUb0dlbmVyYXRvciI7CmltcG9ydCBWdWUgZnJvbSAndnVlJzsKaW1wb3J0IFZ1ZVJvdXRlciBmcm9tICd2dWUtcm91dGVyJzsKaW1wb3J0IFZ1ZU1ldGEgZnJvbSAndnVlLW1ldGEnOwppbXBvcnQgcm91dGVzIGZyb20gJy4vcm91dGVzJzsKVnVlLnVzZShWdWVSb3V0ZXIpOwpWdWUudXNlKFZ1ZU1ldGEsIHsKICAvLyBUaGUgY29tcG9uZW50IG9wdGlvbiBuYW1lIHRoYXQgdnVlLW1ldGEgbG9va3MgZm9yIG1ldGEgaW5mbyBvbi4KICBrZXlOYW1lOiAncGFnZScKfSk7CnZhciByb3V0ZXIgPSBuZXcgVnVlUm91dGVyKHsKICByb3V0ZXM6IHJvdXRlcywKICAvLyBVc2UgdGhlIEhUTUw1IGhpc3RvcnkgQVBJIChpLmUuIG5vcm1hbC1sb29raW5nIHJvdXRlcykKICAvLyBpbnN0ZWFkIG9mIHJvdXRlcyB3aXRoIGhhc2hlcyAoZS5nLiBleGFtcGxlLmNvbS8jL2Fib3V0KS4KICAvLyBUaGlzIG1heSByZXF1aXJlIHNvbWUgc2VydmVyIGNvbmZpZ3VyYXRpb24gaW4gcHJvZHVjdGlvbjoKICAvLyBodHRwczovL3JvdXRlci52dWVqcy5vcmcvZW4vZXNzZW50aWFscy9oaXN0b3J5LW1vZGUuaHRtbCNleGFtcGxlLXNlcnZlci1jb25maWd1cmF0aW9ucwogIG1vZGU6ICdoaXN0b3J5JywKICAvLyBTaW11bGF0ZSBuYXRpdmUtbGlrZSBzY3JvbGwgYmVoYXZpb3Igd2hlbiBuYXZpZ2F0aW5nIHRvIGEgbmV3CiAgLy8gcm91dGUgYW5kIHVzaW5nIGJhY2svZm9yd2FyZCBidXR0b25zLgogIHNjcm9sbEJlaGF2aW9yOiBmdW5jdGlvbiBzY3JvbGxCZWhhdmlvcih0bywgZnJvbSwgc2F2ZWRQb3NpdGlvbikgewogICAgaWYgKHNhdmVkUG9zaXRpb24pIHsKICAgICAgcmV0dXJuIHNhdmVkUG9zaXRpb247CiAgICB9IGVsc2UgewogICAgICByZXR1cm4gewogICAgICAgIHg6IDAsCiAgICAgICAgeTogMAogICAgICB9OwogICAgfQogIH0KfSk7IC8vIEJlZm9yZSBlYWNoIHJvdXRlIGV2YWx1YXRlcy4uLgoKcm91dGVyLmJlZm9yZUVhY2goZnVuY3Rpb24gKHJvdXRlVG8sIHJvdXRlRnJvbSwgbmV4dCkgewogIGlmIChyb3V0ZVRvLm1ldGEuYXV0aFJlcXVpcmVkKSB7CiAgICB2YXIgcHVibGljUGFnZXMgPSBbJy9sb2dpbicsICcvcmVnaXN0ZXInLCAnL2ZvcmdvdC1wYXNzd29yZCddOwogICAgdmFyIGF1dGhwYWdlID0gIXB1YmxpY1BhZ2VzLmluY2x1ZGVzKHJvdXRlVG8ucGF0aCk7CiAgICB2YXIgbG9nZ2VkdXNlciA9IGxvY2FsU3RvcmFnZS5nZXRJdGVtKCd0b2tlbicpOwoKICAgIGlmIChhdXRocGFnZSAmJiAhbG9nZ2VkdXNlcikgewogICAgICByZXR1cm4gbmV4dCgnL2xvZ2luJyk7CiAgICB9CgogICAgbmV4dCgpOwogIH0gZWxzZSB7CiAgICBuZXh0KCk7CiAgfQp9KTsKcm91dGVyLmJlZm9yZVJlc29sdmUoIC8qI19fUFVSRV9fKi9mdW5jdGlvbiAoKSB7CiAgdmFyIF9yZWYgPSBfYXN5bmNUb0dlbmVyYXRvciggLyojX19QVVJFX18qL3JlZ2VuZXJhdG9yUnVudGltZS5tYXJrKGZ1bmN0aW9uIF9jYWxsZWUocm91dGVUbywgcm91dGVGcm9tLCBuZXh0KSB7CiAgICB2YXIgX2l0ZXJhdG9yLCBfc3RlcCwgX2xvb3A7CgogICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9jYWxsZWUkKF9jb250ZXh0MikgewogICAgICB3aGlsZSAoMSkgewogICAgICAgIHN3aXRjaCAoX2NvbnRleHQyLnByZXYgPSBfY29udGV4dDIubmV4dCkgewogICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDA7CiAgICAgICAgICAgIC8vIEZvciBlYWNoIG1hdGNoZWQgcm91dGUuLi4KICAgICAgICAgICAgX2l0ZXJhdG9yID0gX2NyZWF0ZUZvck9mSXRlcmF0b3JIZWxwZXIocm91dGVUby5tYXRjaGVkKTsKICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAyOwogICAgICAgICAgICBfbG9vcCA9IC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfbG9vcCgpIHsKICAgICAgICAgICAgICB2YXIgcm91dGU7CiAgICAgICAgICAgICAgcmV0dXJuIHJlZ2VuZXJhdG9yUnVudGltZS53cmFwKGZ1bmN0aW9uIF9sb29wJChfY29udGV4dCkgewogICAgICAgICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dC5wcmV2ID0gX2NvbnRleHQubmV4dCkgewogICAgICAgICAgICAgICAgICAgIGNhc2UgMDoKICAgICAgICAgICAgICAgICAgICAgIHJvdXRlID0gX3N0ZXAudmFsdWU7CiAgICAgICAgICAgICAgICAgICAgICBfY29udGV4dC5uZXh0ID0gMzsKICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXcgUHJvbWlzZShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7CiAgICAgICAgICAgICAgICAgICAgICAgIC8vIElmIGEgYGJlZm9yZVJlc29sdmVgIGhvb2sgaXMgZGVmaW5lZCwgY2FsbCBpdCB3aXRoCiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHRoZSBzYW1lIGFyZ3VtZW50cyBhcyB0aGUgYGJlZm9yZUVudGVyYCBob29rLgogICAgICAgICAgICAgICAgICAgICAgICBpZiAocm91dGUubWV0YSAmJiByb3V0ZS5tZXRhLmJlZm9yZVJlc29sdmUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICByb3V0ZS5tZXRhLmJlZm9yZVJlc29sdmUocm91dGVUbywgcm91dGVGcm9tLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBJZiB0aGUgdXNlciBjaG9zZSB0byByZWRpcmVjdC4uLgogICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGFyZ3VtZW50cy5sZW5ndGgpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gSWYgcmVkaXJlY3RpbmcgdG8gdGhlIHNhbWUgcm91dGUgd2UncmUgY29taW5nIGZyb20uLi4KICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgLy8gQ29tcGxldGUgdGhlIHJlZGlyZWN0LgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICBuZXh0LmFwcGx5KHZvaWQgMCwgYXJndW1lbnRzKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcignUmVkaXJlY3RlZCcpKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlc29sdmUoKTsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBPdGhlcndpc2UsIGNvbnRpbnVlIHJlc29sdmluZyB0aGUgcm91dGUuCiAgICAgICAgICAgICAgICAgICAgICAgICAgcmVzb2x2ZSgpOwogICAgICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuc3RvcCgpOwogICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgfSwgX2xvb3ApOwogICAgICAgICAgICB9KTsKCiAgICAgICAgICAgIF9pdGVyYXRvci5zKCk7CgogICAgICAgICAgY2FzZSA1OgogICAgICAgICAgICBpZiAoKF9zdGVwID0gX2l0ZXJhdG9yLm4oKSkuZG9uZSkgewogICAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gOTsKICAgICAgICAgICAgICBicmVhazsKICAgICAgICAgICAgfQoKICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5kZWxlZ2F0ZVlpZWxkKF9sb29wKCksICJ0MCIsIDcpOwoKICAgICAgICAgIGNhc2UgNzoKICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSA1OwogICAgICAgICAgICBicmVhazsKCiAgICAgICAgICBjYXNlIDk6CiAgICAgICAgICAgIF9jb250ZXh0Mi5uZXh0ID0gMTQ7CiAgICAgICAgICAgIGJyZWFrOwoKICAgICAgICAgIGNhc2UgMTE6CiAgICAgICAgICAgIF9jb250ZXh0Mi5wcmV2ID0gMTE7CiAgICAgICAgICAgIF9jb250ZXh0Mi50MSA9IF9jb250ZXh0MlsiY2F0Y2giXSgyKTsKCiAgICAgICAgICAgIF9pdGVyYXRvci5lKF9jb250ZXh0Mi50MSk7CgogICAgICAgICAgY2FzZSAxNDoKICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxNDsKCiAgICAgICAgICAgIF9pdGVyYXRvci5mKCk7CgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmZpbmlzaCgxNCk7CgogICAgICAgICAgY2FzZSAxNzoKICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAyMjsKICAgICAgICAgICAgYnJlYWs7CgogICAgICAgICAgY2FzZSAxOToKICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAxOTsKICAgICAgICAgICAgX2NvbnRleHQyLnQyID0gX2NvbnRleHQyWyJjYXRjaCJdKDApOwogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLmFicnVwdCgicmV0dXJuIik7CgogICAgICAgICAgY2FzZSAyMjoKICAgICAgICAgICAgLy8gSWYgd2UgcmVhY2ggdGhpcyBwb2ludCwgY29udGludWUgcmVzb2x2aW5nIHRoZSByb3V0ZS4KICAgICAgICAgICAgbmV4dCgpOwoKICAgICAgICAgIGNhc2UgMjM6CiAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgMTldLCBbMiwgMTEsIDE0LCAxN11dKTsKICB9KSk7CgogIHJldHVybiBmdW5jdGlvbiAoX3gsIF94MiwgX3gzKSB7CiAgICByZXR1cm4gX3JlZi5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogIH07Cn0oKSk7CmV4cG9ydCBkZWZhdWx0IHJvdXRlcjs="},{"version":3,"sources":["/home/terres-rabii/Documents/travail/OacaFront/src/router/index.js"],"names":["Vue","VueRouter","VueMeta","routes","use","keyName","router","mode","scrollBehavior","to","from","savedPosition","x","y","beforeEach","routeTo","routeFrom","next","meta","authRequired","publicPages","authpage","includes","path","loggeduser","localStorage","getItem","beforeResolve","matched","route","Promise","resolve","reject","length","Error"],"mappings":";;;;;;;AAAA,OAAOA,GAAP,MAAgB,KAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,OAAP,MAAoB,UAApB;AAGA,OAAOC,MAAP,MAAmB,UAAnB;AAEAH,GAAG,CAACI,GAAJ,CAAQH,SAAR;AACAD,GAAG,CAACI,GAAJ,CAAQF,OAAR,EAAiB;AACf;AACAG,EAAAA,OAAO,EAAE;AAFM,CAAjB;AAKA,IAAMC,MAAM,GAAG,IAAIL,SAAJ,CAAc;AAC3BE,EAAAA,MAAM,EAANA,MAD2B;AAE3B;AACA;AACA;AACA;AACAI,EAAAA,IAAI,EAAE,SANqB;AAO3B;AACA;AACAC,EAAAA,cAT2B,0BASZC,EATY,EASRC,IATQ,EASFC,aATE,EASa;AACtC,QAAIA,aAAJ,EAAmB;AACjB,aAAOA,aAAP;AACD,KAFD,MAEO;AACL,aAAO;AAAEC,QAAAA,CAAC,EAAE,CAAL;AAAQC,QAAAA,CAAC,EAAE;AAAX,OAAP;AACD;AACF;AAf0B,CAAd,CAAf,C,CAkBA;;AACAP,MAAM,CAACQ,UAAP,CAAkB,UAACC,OAAD,EAAUC,SAAV,EAAqBC,IAArB,EAA8B;AAE9C,MAAGF,OAAO,CAACG,IAAR,CAAaC,YAAhB,EAA6B;AAC3B,QAAMC,WAAW,GAAG,CAAC,QAAD,EAAW,WAAX,EAAwB,kBAAxB,CAApB;AACA,QAAMC,QAAQ,GAAG,CAACD,WAAW,CAACE,QAAZ,CAAqBP,OAAO,CAACQ,IAA7B,CAAlB;AACA,QAAMC,UAAU,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAnB;;AAEA,QAAIL,QAAQ,IAAI,CAACG,UAAjB,EAA6B;AAC3B,aAAOP,IAAI,CAAC,QAAD,CAAX;AACD;;AAEDA,IAAAA,IAAI;AACL,GAVD,MAUK;AACHA,IAAAA,IAAI;AACL;AAGF,CAjBD;AAmBAX,MAAM,CAACqB,aAAP;AAAA,qEAAqB,iBAAOZ,OAAP,EAAgBC,SAAhB,EAA2BC,IAA3B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAQjB;AARiB,mDASGF,OAAO,CAACa,OATX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AASNC,sBAAAA,KATM;AAAA;AAAA,6BAUT,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACrC;AACA;AACA,4BAAIH,KAAK,CAACX,IAAN,IAAcW,KAAK,CAACX,IAAN,CAAWS,aAA7B,EAA4C;AAC1CE,0BAAAA,KAAK,CAACX,IAAN,CAAWS,aAAX,CAAyBZ,OAAzB,EAAkCC,SAAlC,EAA6C,YAAa;AACxD;AACA,gCAAI,UAAKiB,MAAT,EAAiB;AACf;AACA;AACAhB,8BAAAA,IAAI,MAAJ;AACAe,8BAAAA,MAAM,CAAC,IAAIE,KAAJ,CAAU,YAAV,CAAD,CAAN;AACD,6BALD,MAKO;AACLH,8BAAAA,OAAO;AACR;AACF,2BAVD;AAWD,yBAZD,MAYO;AACL;AACAA,0BAAAA,OAAO;AACR;AACF,uBAnBK,CAVS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAoCnB;AACAd,YAAAA,IAAI;;AArCe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAArB;;AAAA;AAAA;AAAA;AAAA;AAwCA,eAAeX,MAAf","sourcesContent":["import Vue from 'vue'\nimport VueRouter from 'vue-router'\nimport VueMeta from 'vue-meta'\n\n\nimport routes from './routes'\n\nVue.use(VueRouter)\nVue.use(VueMeta, {\n  // The component option name that vue-meta looks for meta info on.\n  keyName: 'page',\n})\n\nconst router = new VueRouter({\n  routes,\n  // Use the HTML5 history API (i.e. normal-looking routes)\n  // instead of routes with hashes (e.g. example.com/#/about).\n  // This may require some server configuration in production:\n  // https://router.vuejs.org/en/essentials/history-mode.html#example-server-configurations\n  mode: 'history',\n  // Simulate native-like scroll behavior when navigating to a new\n  // route and using back/forward buttons.\n  scrollBehavior(to, from, savedPosition) {\n    if (savedPosition) {\n      return savedPosition\n    } else {\n      return { x: 0, y: 0 }\n    }\n  },\n})\n\n// Before each route evaluates...\nrouter.beforeEach((routeTo, routeFrom, next) => {\n\n  if(routeTo.meta.authRequired){\n    const publicPages = ['/login', '/register', '/forgot-password'];\n    const authpage = !publicPages.includes(routeTo.path);\n    const loggeduser = localStorage.getItem('token');\n\n    if (authpage && !loggeduser) {\n      return next('/login');\n    }\n\n    next();\n  }else{\n    next();\n  }\n\n\n})\n\nrouter.beforeResolve(async (routeTo, routeFrom, next) => {\n  // Create a `beforeResolve` hook, which fires whenever\n  // `beforeRouteEnter` and `beforeRouteUpdate` would. This\n  // allows us to ensure data is fetched even when params change,\n  // but the resolved route does not. We put it in `meta` to\n  // indicate that it's a hook we created, rather than part of\n  // Vue Router (yet?).\n  try {\n    // For each matched route...\n    for (const route of routeTo.matched) {\n      await new Promise((resolve, reject) => {\n        // If a `beforeResolve` hook is defined, call it with\n        // the same arguments as the `beforeEnter` hook.\n        if (route.meta && route.meta.beforeResolve) {\n          route.meta.beforeResolve(routeTo, routeFrom, (...args) => {\n            // If the user chose to redirect...\n            if (args.length) {\n              // If redirecting to the same route we're coming from...\n              // Complete the redirect.\n              next(...args)\n              reject(new Error('Redirected'))\n            } else {\n              resolve()\n            }\n          })\n        } else {\n          // Otherwise, continue resolving the route.\n          resolve()\n        }\n      })\n    }\n    // If a `beforeResolve` hook chose to redirect, just return.\n  } catch (error) {\n    return\n  }\n\n  // If we reach this point, continue resolving the route.\n  next()\n})\n\nexport default router\n"]}]}