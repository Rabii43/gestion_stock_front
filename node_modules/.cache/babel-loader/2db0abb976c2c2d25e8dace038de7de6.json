{"remainingRequest":"/home/terres-rabii/Documents/travail/scrum/gestion stock front/node_modules/babel-loader/lib/index.js!/home/terres-rabii/Documents/travail/scrum/gestion stock front/src/helpers/fake-backend.js","dependencies":[{"path":"/home/terres-rabii/Documents/travail/scrum/gestion stock front/src/helpers/fake-backend.js","mtime":1652206760773},{"path":"/home/terres-rabii/Documents/travail/scrum/gestion stock front/node_modules/cache-loader/dist/cjs.js","mtime":1647982849025},{"path":"/home/terres-rabii/Documents/travail/scrum/gestion stock front/node_modules/babel-loader/lib/index.js","mtime":1648047804470}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuZmlsdGVyIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkubWFwIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLm9iamVjdC50by1zdHJpbmciOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5yZWdleHAuZXhlYyI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnN0cmluZy5lbmRzLXdpdGgiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcubWF0Y2giOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwppbXBvcnQgX3RvQ29uc3VtYWJsZUFycmF5IGZyb20gIi9ob21lL3RlcnJlcy1yYWJpaS9Eb2N1bWVudHMvdHJhdmFpbC9zY3J1bS9nZXN0aW9uIHN0b2NrIGZyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS90b0NvbnN1bWFibGVBcnJheSI7Ci8vIGFycmF5IGluIGxvY2FsIHN0b3JhZ2UgZm9yIHJlZ2lzdGVyZWQgdXNlcnMKdmFyIHVzZXJzID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgndXNlcnMnKSkgfHwgW3sKICB1c2VybmFtZTogImFkbWluIiwKICBlbWFpbDogImFkbWluQHRoZW1lc2JyYW5kLmNvbSIsCiAgcGFzc3dvcmQ6ICIxMjM0NTYiCn1dOwpleHBvcnQgZnVuY3Rpb24gY29uZmlndXJlRmFrZUJhY2tlbmQoKSB7CiAgdmFyIHJlYWxGZXRjaCA9IHdpbmRvdy5mZXRjaDsKCiAgd2luZG93LmZldGNoID0gZnVuY3Rpb24gKHVybCwgb3B0cykgewogICAgcmV0dXJuIG5ldyBQcm9taXNlKGZ1bmN0aW9uIChyZXNvbHZlLCByZWplY3QpIHsKICAgICAgLy8gd3JhcCBpbiB0aW1lb3V0IHRvIHNpbXVsYXRlIHNlcnZlciBhcGkgY2FsbAogICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHsKICAgICAgICAvLyBhdXRoZW50aWNhdGUKICAgICAgICBpZiAodXJsLmVuZHNXaXRoKCcvdXNlcnMvYXV0aGVudGljYXRlJykgJiYgb3B0cy5tZXRob2QgPT09ICdQT1NUJykgewogICAgICAgICAgLy8gZ2V0IHBhcmFtZXRlcnMgZnJvbSBwb3N0IHJlcXVlc3QKICAgICAgICAgIHZhciBwYXJhbXMgPSBKU09OLnBhcnNlKG9wdHMuYm9keSk7IC8vIGZpbmQgaWYgYW55IHVzZXIgbWF0Y2hlcyBsb2dpbiBjcmVkZW50aWFscwoKICAgICAgICAgIHZhciBmaWx0ZXJlZFVzZXJzID0gdXNlcnMuZmlsdGVyKGZ1bmN0aW9uICh1c2VyKSB7CiAgICAgICAgICAgIHJldHVybiB1c2VyLmVtYWlsID09PSBwYXJhbXMuZW1haWwgJiYgdXNlci5wYXNzd29yZCA9PT0gcGFyYW1zLnBhc3N3b3JkOwogICAgICAgICAgfSk7CgogICAgICAgICAgaWYgKGZpbHRlcmVkVXNlcnMubGVuZ3RoKSB7CiAgICAgICAgICAgIC8vIGlmIGxvZ2luIGRldGFpbHMgYXJlIHZhbGlkIHJldHVybiB1c2VyIGRldGFpbHMgYW5kIGZha2Ugand0IHRva2VuCiAgICAgICAgICAgIHZhciB1c2VyID0gZmlsdGVyZWRVc2Vyc1swXTsKICAgICAgICAgICAgdmFyIHJlc3BvbnNlSnNvbiA9IHsKICAgICAgICAgICAgICBpZDogdXNlci5pZCwKICAgICAgICAgICAgICB1c2VybmFtZTogdXNlci51c2VybmFtZSwKICAgICAgICAgICAgICBuYW1lOiB1c2VyLm5hbWUsCiAgICAgICAgICAgICAgZW1haWw6IHVzZXIuZW1haWwsCiAgICAgICAgICAgICAgdG9rZW46ICdmYWtlLWp3dC10b2tlbicKICAgICAgICAgICAgfTsKICAgICAgICAgICAgcmVzb2x2ZSh7CiAgICAgICAgICAgICAgb2s6IHRydWUsCiAgICAgICAgICAgICAgdGV4dDogZnVuY3Rpb24gdGV4dCgpIHsKICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoSlNPTi5zdHJpbmdpZnkocmVzcG9uc2VKc29uKSk7CiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIC8vIGVsc2UgcmV0dXJuIGVycm9yCiAgICAgICAgICAgIHJlamVjdCgnVGhlc2UgY3JlZGVudGlhbHMgZG8gbm90IG1hdGNoIG91ciByZWNvcmRzLicpOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybjsKICAgICAgICB9IC8vIGdldCB1c2VycwoKCiAgICAgICAgaWYgKHVybC5lbmRzV2l0aCgnL3VzZXJzJykgJiYgb3B0cy5tZXRob2QgPT09ICdHRVQnKSB7CiAgICAgICAgICAvLyBjaGVjayBmb3IgZmFrZSBhdXRoIHRva2VuIGluIGhlYWRlciBhbmQgcmV0dXJuIHVzZXJzIGlmIHZhbGlkLCB0aGlzIHNlY3VyaXR5IGlzIGltcGxlbWVudGVkIHNlcnZlciBzaWRlIGluIGEgcmVhbCBhcHBsaWNhdGlvbgogICAgICAgICAgaWYgKG9wdHMuaGVhZGVycyAmJiBvcHRzLmhlYWRlcnMuQXV0aG9yaXphdGlvbiA9PT0gJ0JlYXJlciBmYWtlLWp3dC10b2tlbicpIHsKICAgICAgICAgICAgcmVzb2x2ZSh7CiAgICAgICAgICAgICAgb2s6IHRydWUsCiAgICAgICAgICAgICAgdGV4dDogZnVuY3Rpb24gdGV4dCgpIHsKICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoSlNPTi5zdHJpbmdpZnkodXNlcnMpKTsKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgLy8gcmV0dXJuIDQwMSBub3QgYXV0aG9yaXNlZCBpZiB0b2tlbiBpcyBudWxsIG9yIGludmFsaWQKICAgICAgICAgICAgcmVqZWN0KCdVbmF1dGhvcmlzZWQnKTsKICAgICAgICAgIH0KCiAgICAgICAgICByZXR1cm47CiAgICAgICAgfSAvLyBnZXQgdXNlciBieSBpZAoKCiAgICAgICAgaWYgKHVybC5tYXRjaCgvXC91c2Vyc1wvXGQrJC8pICYmIG9wdHMubWV0aG9kID09PSAnR0VUJykgewogICAgICAgICAgLy8gY2hlY2sgZm9yIGZha2UgYXV0aCB0b2tlbiBpbiBoZWFkZXIgYW5kIHJldHVybiB1c2VyIGlmIHZhbGlkLCB0aGlzIHNlY3VyaXR5IGlzIGltcGxlbWVudGVkIHNlcnZlciBzaWRlIGluIGEgcmVhbCBhcHBsaWNhdGlvbgogICAgICAgICAgaWYgKG9wdHMuaGVhZGVycyAmJiBvcHRzLmhlYWRlcnMuQXV0aG9yaXphdGlvbiA9PT0gJ0JlYXJlciBmYWtlLWp3dC10b2tlbicpIHsKICAgICAgICAgICAgLy8gZmluZCB1c2VyIGJ5IGlkIGluIHVzZXJzIGFycmF5CiAgICAgICAgICAgIHZhciB1cmxQYXJ0cyA9IHVybC5zcGxpdCgnLycpOwogICAgICAgICAgICB2YXIgaWQgPSBwYXJzZUludCh1cmxQYXJ0c1t1cmxQYXJ0cy5sZW5ndGggLSAxXSk7CiAgICAgICAgICAgIHZhciBtYXRjaGVkVXNlcnMgPSB1c2Vycy5maWx0ZXIoZnVuY3Rpb24gKHVzZXIpIHsKICAgICAgICAgICAgICByZXR1cm4gdXNlci5pZCA9PT0gaWQ7CiAgICAgICAgICAgIH0pOwoKICAgICAgICAgICAgdmFyIF91c2VyID0gbWF0Y2hlZFVzZXJzLmxlbmd0aCA/IG1hdGNoZWRVc2Vyc1swXSA6IG51bGw7IC8vIHJlc3BvbmQgMjAwIE9LIHdpdGggdXNlcgoKCiAgICAgICAgICAgIHJlc29sdmUoewogICAgICAgICAgICAgIG9rOiB0cnVlLAogICAgICAgICAgICAgIHRleHQ6IGZ1bmN0aW9uIHRleHQoKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoX3VzZXIpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSk7CiAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAvLyByZXR1cm4gNDAxIG5vdCBhdXRob3Jpc2VkIGlmIHRva2VuIGlzIG51bGwgb3IgaW52YWxpZAogICAgICAgICAgICByZWplY3QoJ1VuYXV0aG9yaXNlZCcpOwogICAgICAgICAgfQoKICAgICAgICAgIHJldHVybjsKICAgICAgICB9IC8vIHJlZ2lzdGVyIHVzZXIKCgogICAgICAgIGlmICh1cmwuZW5kc1dpdGgoJy91c2Vycy9yZWdpc3RlcicpICYmIG9wdHMubWV0aG9kID09PSAnUE9TVCcpIHsKICAgICAgICAgIC8vIGdldCBuZXcgdXNlciBvYmplY3QgZnJvbSBwb3N0IGJvZHkKICAgICAgICAgIHZhciBuZXdVc2VyID0gSlNPTi5wYXJzZShvcHRzLmJvZHkpOyAvLyB2YWxpZGF0aW9uCgogICAgICAgICAgdmFyIGR1cGxpY2F0ZVVzZXIgPSB1c2Vycy5maWx0ZXIoZnVuY3Rpb24gKHVzZXIpIHsKICAgICAgICAgICAgcmV0dXJuIHVzZXIudXNlcm5hbWUgPT09IG5ld1VzZXIudXNlcm5hbWU7CiAgICAgICAgICB9KS5sZW5ndGg7CgogICAgICAgICAgaWYgKGR1cGxpY2F0ZVVzZXIpIHsKICAgICAgICAgICAgcmVqZWN0KCJVc2VybmFtZSAnIiArIG5ld1VzZXIudXNlcm5hbWUgKyAiJyBpcyBhbHJlYWR5IHRha2VuIik7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH0gLy8gc2F2ZSBuZXcgdXNlcgoKCiAgICAgICAgICBuZXdVc2VyLmlkID0gdXNlcnMubGVuZ3RoID8gTWF0aC5tYXguYXBwbHkoTWF0aCwgX3RvQ29uc3VtYWJsZUFycmF5KHVzZXJzLm1hcChmdW5jdGlvbiAodXNlcikgewogICAgICAgICAgICByZXR1cm4gdXNlci5pZDsKICAgICAgICAgIH0pKSkgKyAxIDogMTsKICAgICAgICAgIHVzZXJzLnB1c2gobmV3VXNlcik7CiAgICAgICAgICBsb2NhbFN0b3JhZ2Uuc2V0SXRlbSgndXNlcnMnLCBKU09OLnN0cmluZ2lmeSh1c2VycykpOyAvLyByZXNwb25kIDIwMCBPSwoKICAgICAgICAgIHJlc29sdmUoewogICAgICAgICAgICBvazogdHJ1ZSwKICAgICAgICAgICAgdGV4dDogZnVuY3Rpb24gdGV4dCgpIHsKICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKCk7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0pOwogICAgICAgICAgcmV0dXJuOwogICAgICAgIH0gLy8gcGFzcyB0aHJvdWdoIGFueSByZXF1ZXN0cyBub3QgaGFuZGxlZCBhYm92ZQoKCiAgICAgICAgcmVhbEZldGNoKHVybCwgb3B0cykudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICAgIHJldHVybiByZXNvbHZlKHJlc3BvbnNlKTsKICAgICAgICB9KTsKICAgICAgfSwgNTAwKTsKICAgIH0pOwogIH07Cn0="},{"version":3,"sources":["/home/terres-rabii/Documents/travail/scrum/gestion stock front/src/helpers/fake-backend.js"],"names":["users","JSON","parse","localStorage","getItem","username","email","password","configureFakeBackend","realFetch","window","fetch","url","opts","Promise","resolve","reject","setTimeout","endsWith","method","params","body","filteredUsers","filter","user","length","responseJson","id","name","token","ok","text","stringify","headers","Authorization","match","urlParts","split","parseInt","matchedUsers","newUser","duplicateUser","Math","max","map","push","setItem","then","response"],"mappings":"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","sourcesContent":["// array in local storage for registered users\r\nlet users = JSON.parse(localStorage.getItem('users'))\r\n    || [{ username: \"admin\", email: \"admin@themesbrand.com\", password: \"123456\" }];\r\n\r\nexport function configureFakeBackend() {\r\n\r\n    let realFetch = window.fetch;\r\n    window.fetch = function (url, opts) {\r\n\r\n        return new Promise((resolve, reject) => {\r\n            // wrap in timeout to simulate server api call\r\n            setTimeout(() => {\r\n\r\n                // authenticate\r\n                if (url.endsWith('/users/authenticate') && opts.method === 'POST') {\r\n                    // get parameters from post request\r\n                    let params = JSON.parse(opts.body);\r\n\r\n                    // find if any user matches login credentials\r\n                    let filteredUsers = users.filter(user => {\r\n                        return user.email === params.email && user.password === params.password;\r\n                    });\r\n\r\n                    if (filteredUsers.length) {\r\n                        // if login details are valid return user details and fake jwt token\r\n                        let user = filteredUsers[0];\r\n                        let responseJson = {\r\n                            id: user.id,\r\n                            username: user.username,\r\n                            name: user.name,\r\n                            email: user.email,\r\n                            token: 'fake-jwt-token'\r\n                        };\r\n                        resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(responseJson)) });\r\n                    } else {\r\n                        // else return error\r\n                        reject('These credentials do not match our records.');\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                // get users\r\n                if (url.endsWith('/users') && opts.method === 'GET') {\r\n                    // check for fake auth token in header and return users if valid, this security is implemented server side in a real application\r\n                    if (opts.headers && opts.headers.Authorization === 'Bearer fake-jwt-token') {\r\n                        resolve({ ok: true, text: () => Promise.resolve(JSON.stringify(users)) });\r\n                    } else {\r\n                        // return 401 not authorised if token is null or invalid\r\n                        reject('Unauthorised');\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                // get user by id\r\n                if (url.match(/\\/users\\/\\d+$/) && opts.method === 'GET') {\r\n                    // check for fake auth token in header and return user if valid, this security is implemented server side in a real application\r\n                    if (opts.headers && opts.headers.Authorization === 'Bearer fake-jwt-token') {\r\n                        // find user by id in users array\r\n                        let urlParts = url.split('/');\r\n                        let id = parseInt(urlParts[urlParts.length - 1]);\r\n                        let matchedUsers = users.filter(user => { return user.id === id; });\r\n                        let user = matchedUsers.length ? matchedUsers[0] : null;\r\n\r\n                        // respond 200 OK with user\r\n                        resolve({ ok: true, text: () => JSON.stringify(user) });\r\n                    } else {\r\n                        // return 401 not authorised if token is null or invalid\r\n                        reject('Unauthorised');\r\n                    }\r\n\r\n                    return;\r\n                }\r\n\r\n                // register user\r\n                if (url.endsWith('/users/register') && opts.method === 'POST') {\r\n                    // get new user object from post body\r\n                    let newUser = JSON.parse(opts.body);\r\n                    // validation\r\n                    let duplicateUser = users.filter(user => { return user.username === newUser.username; }).length;\r\n                    if (duplicateUser) {\r\n                        reject(\"Username '\" + newUser.username + \"' is already taken\");\r\n                        return;\r\n                    }\r\n\r\n                    // save new user\r\n                    newUser.id = users.length ? Math.max(...users.map(user => user.id)) + 1 : 1;\r\n                    users.push(newUser);\r\n                    localStorage.setItem('users', JSON.stringify(users));\r\n\r\n                    // respond 200 OK\r\n                    resolve({ ok: true, text: () => Promise.resolve() });\r\n\r\n                    return;\r\n                }\r\n\r\n                // pass through any requests not handled above\r\n                realFetch(url, opts).then(response => resolve(response));\r\n\r\n            }, 500);\r\n        });\r\n    }\r\n}"]}]}