{"remainingRequest":"/home/terres-rabii/Documents/travail/OacaFront/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/terres-rabii/Documents/travail/OacaFront/src/components/horizontal-topbar.vue?vue&type=template&id=2469a107&","dependencies":[{"path":"/home/terres-rabii/Documents/travail/OacaFront/src/components/horizontal-topbar.vue","mtime":1652206760773},{"path":"/home/terres-rabii/Documents/travail/OacaFront/node_modules/cache-loader/dist/cjs.js","mtime":1647982849025},{"path":"/home/terres-rabii/Documents/travail/OacaFront/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1648047806763},{"path":"/home/terres-rabii/Documents/travail/OacaFront/node_modules/cache-loader/dist/cjs.js","mtime":1647982849025},{"path":"/home/terres-rabii/Documents/travail/OacaFront/node_modules/vue-loader/lib/index.js","mtime":1648047806763}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}